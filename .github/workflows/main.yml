name: Build and Release Rust Binaries

on:
  pull_request: 
    branches: 
        - master
  push:
    branches:
      - master
    tags-ignore:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - arm-unknown-linux-gnueabi     # Raspberry Pi Zero
          - armv7-unknown-linux-gnueabihf # Raspberry Pi Zero 2
          - aarch64-unknown-linux-gnu     # Raspberry Pi 4 and above
          - x86_64-unknown-linux-gnu      # x86
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Run cargo fmt
        run: cargo fmt -- --check

      - name: Run cargo clippy
        run: cargo clippy
        # run: cargo clippy -- -D warnings

      - name: Install cross
        run: cargo install cross

      - name: Build binary with cross
        run: cross build --release --target=${{ matrix.target }}

      - name: Test binary with cross
        run: cross test --target=${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/pi-inky-weather-epd

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
