name: Build and Release Rust Binaries

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - arm-unknown-linux-gnueabihf   # Raspberry Pi Zero
          - armv7-unknown-linux-gnueabihf # Raspberry Pi Zero 2
          - aarch64-unknown-linux-gnu     # Raspberry Pi 4 and above
          - x86_64-unknown-linux-gnu      # x86
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache cargo build, registry, index, and binaries
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/index
            target
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Run cargo fmt
        run: cargo fmt -- --check

      - name: Run cargo check
        run: cargo check

      - name: Install cross
        run: |
          if ! command -v cross &> /dev/null; then
            cargo install cross
          else
            echo "cross is already installed"
          fi

      - name: Build binary with cross
        run: cross build --release --target=${{ matrix.target }}

      - name: Test binary with cross
        run: cross test --target=${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir -p artifact
          cp ${{ github.workspace }}/target/${{ matrix.target }}/release/pi-inky-weather-epd artifact/
          cp ${{ github.workspace }}/dashboard-template-min.svg artifact/
          cp ${{ github.workspace }}/config.toml artifact/
          cp -r ${{ github.workspace }}/static artifact/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: artifact
          overwrite: true

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - arm-unknown-linux-gnueabihf   # Raspberry Pi Zero
          - armv7-unknown-linux-gnueabihf # Raspberry Pi Zero 2
          - aarch64-unknown-linux-gnu     # Raspberry Pi 4 and above
          - x86_64-unknown-linux-gnu      # x86
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts/${{ matrix.target }}

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/${{ matrix.target }}/*
